// Write a function romanToNum that takes in a string of Roman numerals and returns the value in a number.
// https://en.wikipedia.org/wiki/Roman_numerals

// I - 1
// V - 5
// X - 10
// L - 50
// C - 100
// D - 500
// M - 1000

var romanToNum = function(roman) {
  let sum = 0;
  let romanArray = roman.split('');
  console.log("romanArray: ", romanArray, '\n==========');
  
  let specialTable = {
    'CM': 900,
    'CD': 400,
    'XC': 90,
    'XL': 40,
    'IX': 9,
    'IV': 4
    }

  let regularTable = {
    'M': 1000,
    'D': 500,
    'C': 100,
    'L': 50,
    'X': 10,
    'V': 5,
    'I': 1
  }

  for (var i = 1; i < romanArray.length; i++) {
    let previousIndex = i - 1;
    let searchString = '' + romanArray[previousIndex] + romanArray[i];

    if (specialTable[searchString] !== undefined) {
      console.log("searchString: ", searchString);
      console.log("value at: ", specialTable[searchString]);

      sum += specialTable[searchString];
      console.log("sum: ", sum);
    
      romanArray.splice(romanArray.indexOf(romanArray[previousIndex]), 2);

      i -= 2;

      console.log("spliced romanArray: ", romanArray);
      console.log('==========');
    }
  }

  for (var i = 0; i < romanArray.length; i++) {
    sum += regularTable[romanArray[i]];
  }
  
  return sum;
};

// console.log(romanToNum('MMXXI')); //2021
console.log(romanToNum('MCMXCIX')); //1999
// console.log(romanToNum('IV')); //4
// console.log(romanToNum('XXXIII')); //33

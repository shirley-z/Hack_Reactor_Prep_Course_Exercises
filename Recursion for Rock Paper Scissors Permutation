/* Inner Function Method */

var rockPaperScissors = function(rounds) {
  var choices = ['rock', 'paper', 'scissors'];
  var results = [];

  var innerFunction = function (roundsToGo, choicesSoFar) {
    if (roundsToGo === 0) {
      results.push(choicesSoFar);
      return;
    }

    choices.forEach(function(choice) {
      return innerFunction(roundsToGo - 1, choicesSoFar.concat(choice));
    });

  };

  innerFunction(rounds, []);
  
  return results;
};

rockPaperScissors(3);


/* True Recursion - Anthony's version */
var rockPaperScissors = function(roundsToGo, choicesSoFar) {
  var choices = ['rock', 'paper', 'scissors'];
  var result = [];

  if (roundsToGo === 0) {
    result.push(choicesSoFar);
    return result;
  }

  choices.forEach(function(choice) {
    result = result.concat(rockPaperScissors(roundsToGo - 1, choicesSoFar.concat(choice)));
  });
  
  return result;
};

rockPaperScissors(3, []);


/* True Recursion - Hack Reactor Solution */
var rockPaperScissors = function (rounds, playSoFar) {
  var plays = ['rock', 'paper', 'scissors'];
  var results = [];
  playSoFar = playSoFar || [];

  if (playSoFar.length === rounds) {
    results.push(playSoFar);
  } else {
    plays.forEach(function(play) {
      results = results.concat(rockPaperScissors(rounds, playSoFar.concat(play)));
    });
  }
  
  return results;
};

rockPaperScissors(3);

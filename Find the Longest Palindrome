function findLongestPalindrome(sentence) {
  // split sentence into words
  // iterate words and collect the palindromes
  // sort the list of palindromes by word length
  // return the largest item in the sorted list
  let words = sentence.split(' ');
  for (var i = 0; i < words.length; i++) {
      if (!isPalindrome(words[i])) {
          words.splice(i, 1);
          i--;
      }
  }
  words.sort(sortAscendingByLength);
//   return words[words.length - 1];
  return words.pop();
}


function reverseString(string) {
    // let reverse = '';
    // for (var i = string.length - 1; i > -1; i--) {
    //     reverse += string[i];
    // }
    // return reverse;
    let splitString = string.split('');
    let reversedSplitString = splitString.reverse();
    let reversedString = reversedSplitString.join('');
    return reversedString;
}

function isPalindrome(word) {
  // hint: you can detect palindromes by comparing a string to its reverse
  word = word.toLowerCase();
  return word === reverseString(word);
}

function sortAscendingByLength(a, b) {
  if (a.length > b.length) {
    return 1;
  } else if (a.length < b.length) {
    return -1;
  }
  return 0;
}

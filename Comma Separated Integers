function solution(integers) {
  let result = [];

  for (var i = 0; i < integers.length; i++) {
    if (Array.isArray(peek(result)) && integers[i] - 1 === peek(peek(result))) {
      peek(result).push(integers[i]);
    } else if (integers[i] + 1 === integers[i+1] && integers[i] + 2 === integers[i+2]) {
      let range = [integers[i], integers[i+1], integers[i+2]];
      result.push(range);
      i += 2;
    } else {
      result.push(integers[i]);
    }
  }

  for (var j = 0; j < result.length; j++) {
    if (Array.isArray(result[j])) {
      result[j] = result[j][0] + '-' + peek(result[j]);
    }
  }
  return result.join();
}

function peek(integers) {
  return integers[integers.length-1];
}

// =====

function solution2(integers) {
  if (integers.length > 0 && integers.length < 3) {
    return integers.join(',');
  }

  let result = [];
  let start = 0;
  let next = 1;
  let end = 2;

  while (start < integers.length) {
    if (integers[end] - integers[next] === 1 && integers[next] - integers[start] === 1) {
      while (integers[end] - integers[next] === 1) {
        next = end;
        end = end + 1;
      }
      let seq = integers.slice(start, end);
      result.push(`${seq[0]}-${seq[seq.length-1]}`);
      start = end;
      next = end + 1;
      end = end + 2;
    } else {
      result.push(integers[start]);
      start = next;
      next = end;
      end = end + 1;
    }
  }
  return result.join(',');
}

let expected1 = "-6,-3-1,3-5,7-11,14,15,17-20"
assertEqual(solution2([-6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20]), expected1, 'output should equal expected');

let expected2 = "-4--1,2,3,5,6,12-15,17"
assertEqual(solution2([-4, -3, -2, -1, 2, 3, 5, 6, 12, 13, 14, 15, 17]), expected2, 'output should equal expected');

function assertEqual(actual, expected, testName) {
  if (actual === expected) {
    console.log('passed');
  } else {
    console.log('failed [' + testName + ']')
  }
}
